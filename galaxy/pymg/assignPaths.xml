<tool id="Assign_Paths" name="AssignPaths" version="0.1.0">
  <description>Assign a KEGG pathway to each read in a hit table. </description>
  <requirements>
      <requirement type="set_environment">REPO_PATH</requirement>
  </requirements>
  <command>
      assignPathsToReadsFromBlast.py -i $input1 -o $out_file1 -q 
      -f $m8format
#if $lastdb.value[:4].upper() == 'KEGG'
        -p hitid
#else
        -p accs
#end if
        -m "${lastdb.fields.kofile}"
        -M kegg
        -c $cutoff
#if str($keggLevel) != "ko"
        -k \$REPO_PATH/briteko/ko00001.keg
		-l $keggLevel
#end if
        -C $method
#if $filter.usefilter:
        -F $filter.filterPct
#end if

  </command>
  <inputs>
    <param format="tabular" name="input1" type="data" label="In data table" help="Data missing? See TIP below"/>
     <param name="m8format" type="select" label="Hit table format">
            <option value="last">Lastal tabular</option>
            <option value="blast">Blast-like </option>
            <option value="gene" selected="True">Gene: Blast-like plus read and hit description columns</option> 
            <option value="liz">Liz: Blast-like plus hit description column</option>
     </param>
	     <param name="lastdb" type="select" display="radio" label="against target database">
            <options from_data_table="pipe_lastdb_p" />
         </param>
    <param name="cutoff" type="float" size="10" value="0.01" label="Hide counts below this fraction of total:"/>
         <param name="keggLevel" type="select" label="KEGG level to count">
            <option value="ko" selected="True">Orthologs</option>
            <option value="1">Level 1</option>
            <option value="2">Level 2</option>
            <option value="3">Level 3</option>
         </param>
	     <param name="method" type="select" label="How to deal with multiple hits per read:">
              <option value="first">Take first hit</option>	    
              <option value="all">Keep all hits</option>	    
              <option value="consensus">Consensus: None unless all hits are to same org</option>	    
              <option value="most">Take most common hit</option>	    
	     </param>
    <conditional name="filter">
        <param name="usefilter" type="boolean" checked="True" truevalue="True" falsevalue="False" label="Filter input table on hit quality"/>
        <when value="True">
             <param name="filterPct" type="integer" size="10" value="0" label="Keep only hits within this percentage of the best hit for each read. 0-> only the top score for each read."/>
        </when>
    </conditional>
  </inputs>
  <outputs>
    <data format="tabular" name="out_file1" metadata_source="input1"/>
  </outputs>
  <help>

 .. class:: infomark

**TIP:** If your data is not TAB delimited, use *Text Manipulation-&gt;Convert* or *Blast-&gt;Parse blast text*

-----

**What it does**

This tool takes a (b)last hit table (against KEGG or RefSeq) and assigns a KEGG ortholog or pathway to each read based on what it hit.

-----

**What it ACTUALLY does**

This tool runs the script assignPathsToReadsFromBlast.py (http://pyrodata.mit.edu/ddr2/scripts/show/62)

</help>
</tool>
